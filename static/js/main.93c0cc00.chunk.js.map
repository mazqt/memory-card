{"version":3,"sources":["components/Score.js","components/Card.js","components/Hand.js","components/SetPicker.js","components/ColourPicker.js","components/MenuText.js","components/Footer.js","App.js","index.js"],"names":["Score","props","score","highscore","Card","className","src","card","imageUrl","onClick","chooseCard","bind","name","alt","Hand","hand","SetPicker","onChange","onChangeSet","value","selectedSet","magicSets","map","set","code","ColourPicker","onChangeColour","selectedColour","MenuText","Footer","href","App","mtg","require","useState","playing","setPlaying","magicSet","setMagicSet","colour","setColour","cards","setCards","loading","setLoading","setScore","setHand","setHighscore","usedCards","setUsedCards","setMagicSets","loadingSets","setLoadingSets","hasWon","setHasWon","a","where","colors","contains","response","type","sets","createHand","indexes","length","index","Math","floor","random","includes","push","newHand","array","i","j","shuffleArray","useEffect","fetchSets","fetchSet","window","location","reload","style","width","event","setCode","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93c0cc00.chunk.js","sourcesContent":["function Score(props) {\n  return (\n    <div>\n      <h1>Score: </h1>\n      <h1>{props.score}</h1>\n      <h1>Highscore: </h1>\n      <h1>{props.highscore}</h1>\n    </div>\n  );\n}\n\nexport default Score;\n","function Card(props) {\n  return (\n    <div className=\"Card\">\n      <img\n        src={props.card.imageUrl}\n        onClick={props.chooseCard.bind(null, props.card.name)}\n        alt={props.card.name}\n      ></img>\n    </div>\n  );\n}\n\nexport default Card;\n","import Card from \"./Card\";\n\nfunction Hand(props) {\n  return (\n    <div className=\"Hand\">\n      <Card chooseCard={props.chooseCard} card={props.hand[0]} />\n      <Card chooseCard={props.chooseCard} card={props.hand[1]} />\n      <Card chooseCard={props.chooseCard} card={props.hand[2]} />\n      <Card chooseCard={props.chooseCard} card={props.hand[3]} />\n      <Card chooseCard={props.chooseCard} card={props.hand[4]} />\n      <Card chooseCard={props.chooseCard} card={props.hand[5]} />\n      <Card chooseCard={props.chooseCard} card={props.hand[6]} />\n    </div>\n  );\n}\n\nexport default Hand;\n","function SetPicker(props) {\n  return (\n    <div>\n      <select onChange={props.onChangeSet} value={props.selectedSet}>\n        {props.magicSets.map((set) => {\n          return <option value={set.code}>{set.name}</option>;\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport default SetPicker;\n","function ColourPicker(props) {\n  return (\n    <div>\n      <select onChange={props.onChangeColour} value={props.selectedColour}>\n        <option value=\"White\">White</option>\n        <option value=\"Black\">Black</option>\n        <option value=\"Red\">Red</option>\n        <option value=\"Green\">Green</option>\n        <option value=\"Blue\">Blue</option>\n      </select>\n    </div>\n  );\n}\n\nexport default ColourPicker;\n","function MenuText(props) {\n  return (\n    <div>\n      <p>\n        In this game, you'll be presented with a hand of 7 cards from the set\n        and colour you've chosen. After you pick one, you'll be presented with a\n        new hand of 7 cards. As long as you keep choosing cards that you haven't\n        picked already, your score will increase. Once you pick a card that\n        you've already chosen, the score and cards you've picked will both\n        reset. Try to get as high of a score as you can!\n      </p>\n      <p>PS.</p>\n      <p>\n        While the game allows you to pick any set from magic's history, some of\n        the cards from older sets lack image urls, and are thus removed from the\n        pool. Hence, you may find that certain sets may give you a smaller\n        number of cards than newer ones.\n      </p>\n    </div>\n  );\n}\nexport default MenuText;\n","function Footer(props) {\n  return (\n    <div className=\"Footer\">\n      <a href=\"https://github.com/mazqt/memory-card\">Github Repository</a>\n      <a href=\"https://github.com/MagicTheGathering/mtg-sdk-javascript\">\n        Repository for the MTG Javascript SDK\n      </a>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState, useEffect } from \"react\";\nimport Score from \"./components/Score\";\nimport Hand from \"./components/Hand\";\nimport SetPicker from \"./components/SetPicker\";\nimport ColourPicker from \"./components/ColourPicker\";\nimport MenuText from \"./components/MenuText\";\nimport Footer from \"./components/Footer\";\nimport \"./app.css\";\n\nfunction App() {\n  const mtg = require(\"mtgsdk\");\n  const [playing, setPlaying] = useState(false);\n  const [magicSet, setMagicSet] = useState(\"DOM\");\n  const [colour, setColour] = useState(\"White\");\n  const [cards, setCards] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [score, setScore] = useState(0);\n  const [hand, setHand] = useState([]);\n  const [highscore, setHighscore] = useState(0);\n  const [usedCards, setUsedCards] = useState([]);\n  const [magicSets, setMagicSets] = useState([]);\n  const [loadingSets, setLoadingSets] = useState(true);\n  const [hasWon, setHasWon] = useState(false);\n\n  async function fetchSet() {\n    setLoading(true);\n    let response = await mtg.card.where({\n      set: magicSet,\n      colors: colour,\n      contains: \"imageUrl\",\n    });\n    setCards(response);\n    setLoading(false);\n  }\n\n  function shuffleArray(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n  }\n\n  async function fetchSets() {\n    setLoadingSets(true);\n    let response = await mtg.set.where({ type: \"core\" | \"expansion\" });\n    let sets = [...response];\n    response = await mtg.set.where({ type: \"expansion\" });\n    sets = [...sets, ...response];\n    setMagicSets(sets);\n    setLoadingSets(false);\n  }\n\n  function createHand() {\n    let indexes = [];\n\n    while (indexes.length < 1) {\n      let index = Math.floor(Math.random() * cards.length);\n      if (!usedCards.includes(cards[index].name)) {\n        indexes.push(index);\n      }\n    }\n\n    while (indexes.length < 7) {\n      let index = Math.floor(Math.random() * cards.length);\n      if (!indexes.includes(index)) {\n        indexes.push(index);\n      }\n    }\n    let newHand = indexes.map((index) => cards[index]);\n    shuffleArray(newHand);\n    setHand(newHand);\n  }\n\n  useEffect(() => {\n    fetchSets();\n  }, []);\n\n  useEffect(() => {\n    if (cards !== null) {\n      createHand();\n    }\n  }, [cards, score]);\n\n  useEffect(() => {\n    fetchSet();\n  }, [colour, magicSet]);\n\n  const magicSetHandler = (event) => {\n    const setCode = event.target.value;\n    setMagicSet(setCode);\n  };\n\n  const magicColourHandler = (event) => {\n    const colour = event.target.value;\n    setColour(colour);\n  };\n\n  const chooseCard = (name) => {\n    if (!usedCards.includes(name)) {\n      setScore(score + 1);\n      if (score >= highscore) {\n        setHighscore(score + 1);\n      }\n      if (usedCards.length + 1 === cards.length) {\n        setHasWon(true);\n      }\n      setUsedCards([...usedCards, name]);\n    } else {\n      setScore(0);\n      setUsedCards([]);\n    }\n  };\n\n  if (playing) {\n    if (!hasWon) {\n      return (\n        <div>\n          <div className=\"Game\">\n            <Score score={score} highscore={highscore} />\n            <Hand chooseCard={chooseCard} hand={hand} />\n            <button onClick={setPlaying.bind(null, false)}>Back to menu</button>\n          </div>\n          <Footer />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"Menu\">\n          <p>\n            Congratulations, you managed to win the game! Your memory must be\n            quite outstanding to have done that.\n          </p>\n          <button\n            onClick={() => {\n              window.location.reload();\n            }}\n          >\n            Play again\n          </button>\n        </div>\n      );\n    }\n  } else {\n    if (loading || loadingSets) {\n      return (\n        <div>\n          <div className=\"Menu\">\n            <div style={{ width: \"30vw\" }}>\n              <MenuText />\n            </div>\n            <div className=\"Picker\">\n              <p>Loading!</p>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      );\n    } else {\n      return (\n        <div>\n          <div className=\"Menu\">\n            <div style={{ width: \"30vw\" }}>\n              <MenuText />\n            </div>\n            <div className=\"Picker\">\n              <SetPicker\n                onChangeSet={magicSetHandler}\n                selectedSet={magicSet}\n                magicSets={magicSets}\n              />\n              <ColourPicker\n                onChangeColour={magicColourHandler}\n                selectedColour={colour}\n              />\n              <button onClick={setPlaying.bind(null, true)}>Play!</button>\n            </div>\n          </div>\n          <Footer />\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}